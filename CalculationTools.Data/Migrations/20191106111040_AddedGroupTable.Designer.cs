// <auto-generated />
using System;
using CalculationTools.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalculationTools.Data.Migrations
{
    [DbContext(typeof(CalculationToolsDBContext))]
    [Migration("20191106111040_AddedGroupTable")]
    partial class AddedGroupTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("CalculationTools.Common.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CharacterName")
                        .HasColumnType("TEXT");

                    b.Property<int>("CharacterOwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CharacterOwnerName")
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CalculationTools.Common.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Icon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CalculationTools.Common.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServerCountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServerCountryCode = "en",
                            ServerName = "International"
                        },
                        new
                        {
                            Id = 2,
                            ServerCountryCode = "nl",
                            ServerName = "Netherlands"
                        },
                        new
                        {
                            Id = 3,
                            ServerCountryCode = "de",
                            ServerName = "Germany"
                        },
                        new
                        {
                            Id = 4,
                            ServerCountryCode = "br",
                            ServerName = "Brazil"
                        },
                        new
                        {
                            Id = 5,
                            ServerCountryCode = "pl",
                            ServerName = "Poland"
                        },
                        new
                        {
                            Id = 6,
                            ServerCountryCode = "fr",
                            ServerName = "France"
                        },
                        new
                        {
                            Id = 7,
                            ServerCountryCode = "ru",
                            ServerName = "Russia"
                        },
                        new
                        {
                            Id = 8,
                            ServerCountryCode = "us",
                            ServerName = "United States"
                        },
                        new
                        {
                            Id = 9,
                            ServerCountryCode = "es",
                            ServerName = "Spain"
                        },
                        new
                        {
                            Id = 10,
                            ServerCountryCode = "it",
                            ServerName = "Italy"
                        },
                        new
                        {
                            Id = 11,
                            ServerCountryCode = "gr",
                            ServerName = "Greece"
                        },
                        new
                        {
                            Id = 12,
                            ServerCountryCode = "tr",
                            ServerName = "Turkey"
                        },
                        new
                        {
                            Id = 13,
                            ServerCountryCode = "cz",
                            ServerName = "Czech Republic"
                        },
                        new
                        {
                            Id = 14,
                            ServerCountryCode = "pt",
                            ServerName = "Portugal"
                        },
                        new
                        {
                            Id = 15,
                            ServerCountryCode = "no",
                            ServerName = "Norway"
                        },
                        new
                        {
                            Id = 16,
                            ServerCountryCode = "sk",
                            ServerName = "Slovakia"
                        },
                        new
                        {
                            Id = 17,
                            ServerCountryCode = "ro",
                            ServerName = "Romania"
                        },
                        new
                        {
                            Id = 18,
                            ServerCountryCode = "hu",
                            ServerName = "Hungary"
                        },
                        new
                        {
                            Id = 19,
                            ServerCountryCode = "beta",
                            ServerName = "Beta Server"
                        });
                });

            modelBuilder.Entity("CalculationTools.Common.Village", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("CalculationTools.Common.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowLogin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Full")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("KeyRequired")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Maintenance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Recommended")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorldCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ServerId");

                    b.ToTable("Worlds");
                });

            modelBuilder.Entity("CalculationTools.Common.Group", b =>
                {
                    b.HasOne("CalculationTools.Common.Character", "Character")
                        .WithMany("Groups")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CalculationTools.Common.World", b =>
                {
                    b.HasOne("CalculationTools.Common.Character", "Character")
                        .WithMany("Worlds")
                        .HasForeignKey("CharacterId");

                    b.HasOne("CalculationTools.Common.Server", "Server")
                        .WithMany("Worlds")
                        .HasForeignKey("ServerId");
                });
#pragma warning restore 612, 618
        }
    }
}
